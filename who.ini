# Sample of a who.ini file from which to begin configuring
# this looks a lot like the "quickstart" application's setup,
# minus the translation capability...

[plugin:auth_tkt]
# Cookie-based session identification storage
use = repoze.who.plugins.auth_tkt:make_plugin
secret = 'this secret is not really very SECRET!'

[plugin:friendlyform]
# Redirecting form which does login via a "post"
# from a regular /login form
use = repoze.who.plugins.friendlyform:FriendlyFormPlugin
login_form_url= /login
login_handler_path = /login_handler
logout_handler_path = /logout_handler
rememberer_name = auth_tkt
post_login_url =
post_logout_url =

[plugin:sqlauth]
# An SQLAlchemy authorization plugin
use = bastion.lib.auth:auth_plugin

# Now the configuration starts wiring together the pieces
[general]
request_classifier = repoze.who.classifiers:default_request_classifier
challenge_decider = repoze.who.classifiers:default_challenge_decider

[identifiers]
# We can decide who the user is trying to identify as using either
# a fresh form-post, or the session identifier cookie
plugins =
    friendlyform;browser
    auth_tkt

[authenticators]
plugins =
    sqlauth

[challengers]
plugins =
    friendlyform;browser

[mdproviders]
# Metadata providers are the things that actually look up a user's credentials
# here we have a plugin that provides "user" information (md_plugin) and another,
# which acts as an adapter to the first, to provide group/permission information.
plugins =
    bastion.lib.auth:md_plugin
    bastion.lib.auth:md_group_plugin
